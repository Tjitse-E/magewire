<?php
/**
 * Copyright Â© Willem Poortman 2021-present. All rights reserved.
 *
 * Please read the README and LICENSE files for more
 * details on copyrights and license information.
 */

declare(strict_types=1);

/** @var Escaper $escaper */
/** @var Template $block */

use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;

$magewireScripts = $block->getViewModel();
?>
<?php if ($magewireScripts->pageRequiresMagewire()): ?>
    <div id="magewire-loader"
         x-data="magewireLoader()"
         x-cloak
         x-spread="wrapper"
         x-bind="wrapper"
         role="status"
         aria-live="polite"
    >
         <div class="fixed
                     top-0 left-0 right-0 bottom-0
                     w-full h-screen
                     overflow-hidden
                     bg-white bg-opacity-90"
              x-spread="loader"
              x-bind="loader"
              x-transition:enter="transition duration-300"
              x-transition:enter-start="opacity-0"
              x-transition:enter-end="opacity-100"
              x-transition:leave="transition duration-200"
              x-transition:leave-start="opacity-100"
              x-transition:leave-end="opacity-0"
        >
            <div class="flex flex-col justify-center items-center h-screen w-full space-y-6">
                <svg class="animate-spin h-8 w-8"
                     xmlns="http://www.w3.org/2000/svg"
                     fill="none"
                     viewBox="0 0 24 24"
                >
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="shadow-md" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
            </div>
        </div>

        <?= $block->getChildHtml('magewire.loader.notifications') ?>
    </div>

    <script>
        function magewireLoader() {
            return {
                active: false,
                notifications: [],
                current: 0,

                wrapper() {
                    return {
                        ['x-on:magewire:loader:start.window']() {
                            this.active = true

                            if (this.$event.detail) {
                                this.notifications.push(Object.assign(this.$event.detail, { active: true, show: true, failed: false }))
                                this.current = this.$event.detail.title ? this.notifications.length - 1 : this.current
                            }
                        },
                        ['x-on:magewire:loader:tick.window']() {
                            if (this.notifications[this.current] !== undefined) {
                                this.notifications[this.current].active = false
                            }

                            if (this.$event.detail) {
                                this.notifications.push(Object.assign(this.$event.detail, { active: true, show: true, failed: false }))
                                this.current = this.$event.detail.title ? this.notifications.length - 1 : this.current
                            }
                        },
                        ['x-on:magewire:loader:fail.window']() {
                            if (this.notifications[this.current] !== undefined) {
                                this.notifications[this.current].failed = true
                            }
                        },
                        ['x-on:magewire:loader:stop.window']() {
                            if (this.notifications[this.current] !== undefined) {
                                this.notifications[this.current].active = false
                            }

                            this.active  = false
                            this.current = null

                            let i = 0

                            this.notifications.forEach((loader, index) => {
                                if (this.notifications[index].title === null || this.notifications[index].show === false) {
                                    return
                                }

                                setTimeout(() => {
                                    this.notifications[index].show = false
                                }, i = i + this.notifications[index].failed ? 2500 : 1500)
                            })
                        },
                        ['x-bind:class']() {
                            return {
                                'z-50 relative': this.active
                            }
                        }
                    }
                },

                loader() {
                    return {
                        ['x-show']() {
                            return this.active
                        }
                    }
                }
            }
        }
    </script>
<?php endif ?>
